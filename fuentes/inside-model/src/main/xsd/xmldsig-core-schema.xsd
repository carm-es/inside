<?xml version="1.0" encoding="utf-8"?>
<xsd:schema 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
    xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
    targetNamespace="http://www.w3.org/2000/09/xmldsig#"
    version="0.1" elementFormDefault="qualified"> 

<!-- Basic Types Defined for Signatures -->

<xsd:simpleType name="CryptoBinary">
  <xsd:restriction base="xsd:base64Binary">
  </xsd:restriction>
</xsd:simpleType>

<!-- Start Signature -->

<xsd:element name="Signature" type="ds:SignatureType" />
<xsd:complexType name="SignatureType">
  <xsd:sequence> 
    <xsd:element ref="ds:SignedInfo" /> 
    <xsd:element ref="ds:SignatureValue" /> 
    <xsd:element ref="ds:KeyInfo" minOccurs="0" /> 
    <xsd:element ref="ds:Object" minOccurs="0" maxOccurs="unbounded" /> 
  </xsd:sequence>  
  <xsd:attribute name="Id" type="xsd:ID" use="optional" />
</xsd:complexType>

  <xsd:element name="SignatureValue" type="ds:SignatureValueType" /> 
  <xsd:complexType name="SignatureValueType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:base64Binary">
        <xsd:attribute name="Id" type="xsd:ID" use="optional" />
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

<!-- Start SignedInfo -->

<xsd:element name="SignedInfo" type="ds:SignedInfoType" />
<xsd:complexType name="SignedInfoType">
  <xsd:sequence> 
    <xsd:element ref="ds:CanonicalizationMethod" /> 
    <xsd:element ref="ds:SignatureMethod" /> 
    <xsd:element ref="ds:Reference" maxOccurs="unbounded" /> 
  </xsd:sequence>  
  <xsd:attribute name="Id" type="xsd:ID" use="optional" /> 
</xsd:complexType>

  <xsd:element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType" /> 
  <xsd:complexType name="CanonicalizationMethodType" mixed="true">
    <xsd:sequence>
      <xsd:any namespace="##any" minOccurs="0" maxOccurs="unbounded" />
      <!-- (0,unbounded) elements from (1,1) namespace -->
    </xsd:sequence>
    <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required" /> 
  </xsd:complexType>

  <xsd:element name="SignatureMethod" type="ds:SignatureMethodType" />
  <xsd:complexType name="SignatureMethodType" mixed="true">
    <xsd:sequence>
      <xsd:element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType" />
      <xsd:any namespace="##other" minOccurs="0" maxOccurs="unbounded" />
      <!-- (0,unbounded) elements from (1,1) external namespace -->
    </xsd:sequence>
    <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required" /> 
  </xsd:complexType>

<!-- Start Reference -->

<xsd:element name="Reference" type="ds:ReferenceType" />
<xsd:complexType name="ReferenceType">
  <xsd:sequence> 
    <xsd:element ref="ds:Transforms" minOccurs="0" /> 
    <xsd:element ref="ds:DigestMethod" /> 
    <xsd:element ref="ds:DigestValue" /> 
  </xsd:sequence>
  <xsd:attribute name="Id" type="xsd:ID" use="optional" /> 
  <xsd:attribute name="URI" type="xsd:anyURI" use="optional" /> 
  <xsd:attribute name="Type" type="xsd:anyURI" use="optional" /> 
</xsd:complexType>

  <xsd:element name="Transforms" type="ds:TransformsType" />
  <xsd:complexType name="TransformsType">
    <xsd:sequence>
      <xsd:element ref="ds:Transform" maxOccurs="unbounded" />  
    </xsd:sequence>
  </xsd:complexType>

  <xsd:element name="Transform" type="ds:TransformType" />
  <xsd:complexType name="TransformType" mixed="true">
    <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
      <xsd:any namespace="##other" processContents="lax" />
      <!-- (1,1) elements from (0,unbounded) namespaces -->
      <xsd:element name="XPath" type="xsd:string" /> 
    </xsd:choice>
    <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required" /> 
  </xsd:complexType>

<!-- End Reference -->

<xsd:element name="DigestMethod" type="ds:DigestMethodType" />
<xsd:complexType name="DigestMethodType" mixed="true"> 
  <xsd:sequence>
    <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
  </xsd:sequence>    
  <xsd:attribute name="Algorithm" type="xsd:anyURI" use="required" /> 
</xsd:complexType>

<xsd:element name="DigestValue" type="ds:DigestValueType" />
<xsd:simpleType name="DigestValueType">
  <xsd:restriction base="xsd:base64Binary" />
</xsd:simpleType>

<!-- End SignedInfo -->

<!-- Start KeyInfo -->

<xsd:element name="KeyInfo" type="ds:KeyInfoType" /> 
<xsd:complexType name="KeyInfoType" mixed="true">
  <xsd:choice maxOccurs="unbounded">     
    <xsd:element ref="ds:KeyName" /> 
    <xsd:element ref="ds:KeyValue" /> 
    <xsd:element ref="ds:RetrievalMethod" /> 
    <xsd:element ref="ds:X509Data" /> 
    <xsd:element ref="ds:PGPData" /> 
    <xsd:element ref="ds:SPKIData" />
    <xsd:element ref="ds:MgmtData" />
    <xsd:any processContents="lax" namespace="##other" />
    <!-- (1,1) elements from (0,unbounded) namespaces -->
  </xsd:choice>
  <xsd:attribute name="Id" type="xsd:ID" use="optional" /> 
</xsd:complexType>

  <xsd:element name="KeyName" type="xsd:string" />
  <xsd:element name="MgmtData" type="xsd:string" />

  <xsd:element name="KeyValue" type="ds:KeyValueType" /> 
  <xsd:complexType name="KeyValueType" mixed="true">
   <xsd:choice>
     <xsd:element ref="ds:DSAKeyValue" />
     <xsd:element ref="ds:RSAKeyValue" />
     <xsd:any namespace="##other" processContents="lax" />
   </xsd:choice>
  </xsd:complexType>

  <xsd:element name="RetrievalMethod" type="ds:RetrievalMethodType" /> 
  <xsd:complexType name="RetrievalMethodType">
    <xsd:sequence>
      <xsd:element ref="ds:Transforms" minOccurs="0" /> 
    </xsd:sequence>  
    <xsd:attribute name="URI" type="xsd:anyURI" />
    <xsd:attribute name="Type" type="xsd:anyURI" use="optional" />
  </xsd:complexType>

<!-- Start X509Data -->

<xsd:element name="X509Data" type="ds:X509DataType" /> 
<xsd:complexType name="X509DataType">
  <xsd:sequence maxOccurs="unbounded">
    <xsd:choice>
      <xsd:element name="X509IssuerSerial" type="ds:X509IssuerSerialType" />
      <xsd:element name="X509SKI" type="xsd:base64Binary" />
      <xsd:element name="X509SubjectName" type="xsd:string" />
      <xsd:element name="X509Certificate" type="xsd:base64Binary" />
      <xsd:element name="X509CRL" type="xsd:base64Binary" />
      <xsd:any namespace="##other" processContents="lax" />
    </xsd:choice>
  </xsd:sequence>
</xsd:complexType>

<xsd:complexType name="X509IssuerSerialType"> 
  <xsd:sequence> 
    <xsd:element name="X509IssuerName" type="xsd:string" /> 
    <xsd:element name="X509SerialNumber" type="xsd:integer" /> 
  </xsd:sequence>
</xsd:complexType>

<!-- End X509Data -->

<!-- Begin PGPData -->

<xsd:element name="PGPData" type="ds:PGPDataType" /> 
<xsd:complexType name="PGPDataType"> 
  <xsd:choice>
    <xsd:sequence>
      <xsd:element name="PGPKeyID" type="xsd:base64Binary" /> 
      <xsd:element name="PGPKeyPacket" type="xsd:base64Binary" minOccurs="0" /> 
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
    <xsd:sequence>
      <xsd:element name="PGPKeyPacket" type="xsd:base64Binary" /> 
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
  </xsd:choice>
</xsd:complexType>

<!-- End PGPData -->

<!-- Begin SPKIData -->

<xsd:element name="SPKIData" type="ds:SPKIDataType" /> 
<xsd:complexType name="SPKIDataType">
  <xsd:sequence maxOccurs="unbounded">
    <xsd:element name="SPKISexp" type="xsd:base64Binary" />
    <xsd:any namespace="##other" processContents="lax" minOccurs="0" />
  </xsd:sequence>
</xsd:complexType> 

<!-- End SPKIData -->

<!-- End KeyInfo -->

<!-- Start Object (Manifest, SignatureProperty) -->

<xsd:element name="Object" type="ds:ObjectType" /> 
<xsd:complexType name="ObjectType" mixed="true">
  <xsd:sequence minOccurs="0" maxOccurs="unbounded">
    <xsd:any namespace="##any" processContents="lax" />
  </xsd:sequence>
  <xsd:attribute name="Id" type="xsd:ID" use="optional" /> 
  <xsd:attribute name="MimeType" type="xsd:string" use="optional" /> <!-- add a grep facet -->
  <xsd:attribute name="Encoding" type="xsd:anyURI" use="optional" /> 
</xsd:complexType>

<xsd:element name="Manifest" type="ds:ManifestType" /> 
<xsd:complexType name="ManifestType">
  <xsd:sequence>
    <xsd:element ref="ds:Reference" maxOccurs="unbounded" /> 
  </xsd:sequence>
  <xsd:attribute name="Id" type="xsd:ID" use="optional" /> 
</xsd:complexType>

<xsd:element name="SignatureProperties" type="ds:SignaturePropertiesType" /> 
<xsd:complexType name="SignaturePropertiesType">
  <xsd:sequence>
    <xsd:element ref="ds:SignatureProperty" maxOccurs="unbounded" /> 
  </xsd:sequence>
  <xsd:attribute name="Id" type="xsd:ID" use="optional" /> 
</xsd:complexType>

   <xsd:element name="SignatureProperty" type="ds:SignaturePropertyType" /> 
   <xsd:complexType name="SignaturePropertyType" mixed="true">
     <xsd:choice maxOccurs="unbounded">
       <xsd:any namespace="##other" processContents="lax" />
       <!-- (1,1) elements from (1,unbounded) namespaces -->
     </xsd:choice>
     <xsd:attribute name="Target" type="xsd:anyURI" use="required" /> 
     <xsd:attribute name="Id" type="xsd:ID" use="optional" /> 
   </xsd:complexType>

<!-- End Object (Manifest, SignatureProperty) -->

<!-- Start Algorithm Parameters -->

<xsd:simpleType name="HMACOutputLengthType">
  <xsd:restriction base="xsd:integer" />
</xsd:simpleType>

<!-- Start KeyValue Element-types -->

<xsd:element name="DSAKeyValue" type="ds:DSAKeyValueType" />
<xsd:complexType name="DSAKeyValueType">
  <xsd:sequence>
    <xsd:sequence minOccurs="0">
      <xsd:element name="P" type="ds:CryptoBinary" />
      <xsd:element name="Q" type="ds:CryptoBinary" />
    </xsd:sequence>
    <xsd:element name="G" type="ds:CryptoBinary" minOccurs="0" />
    <xsd:element name="Y" type="ds:CryptoBinary" />
    <xsd:element name="J" type="ds:CryptoBinary" minOccurs="0" />
    <xsd:sequence minOccurs="0">
      <xsd:element name="Seed" type="ds:CryptoBinary" />
      <xsd:element name="PgenCounter" type="ds:CryptoBinary" />
    </xsd:sequence>
  </xsd:sequence>
</xsd:complexType>

<xsd:element name="RSAKeyValue" type="ds:RSAKeyValueType" />
<xsd:complexType name="RSAKeyValueType">
  <xsd:sequence>
    <xsd:element name="Modulus" type="ds:CryptoBinary" /> 
    <xsd:element name="Exponent" type="ds:CryptoBinary" /> 
  </xsd:sequence>
</xsd:complexType> 

<!-- End KeyValue Element-types -->

<!-- End Signature -->

</xsd:schema>
